diff --git a/src/gui/kernel/qshortcutmap.cpp b/src/gui/kernel/qshortcutmap.cpp
index e3236a0086..e74640d88c 100644
--- a/src/gui/kernel/qshortcutmap.cpp
+++ b/src/gui/kernel/qshortcutmap.cpp
@@ -492,7 +492,30 @@ void QShortcutMap::createNewSequences(QKeyEvent *e, QList<QKeySequence> &ksl, in
     qCDebug(lcShortcutMap) << "Creating new sequences for" << e
         << "with ignoredModifiers=" << Qt::KeyboardModifiers(ignoredModifiers);
     int pkTotal = possibleKeys.size();
-    if (!pkTotal)
+
+    // Patch: Fix IMEs on macOS.
+    //
+    // See https://github.com/telegramdesktop/tdesktop/issues/17242
+    //
+    // In case non-standard IMEs are used getting the
+    // kTISPropertyUnicodeKeyLayoutData for the input source in
+    // qapplekeymapper.mm gives nullptr and commit in qtbase:
+    //
+    // 6faa33192c99f3432b28591b991918b47bd6fa09
+    //
+    // removed a fallback, returning just a single zero possible key:
+    //
+    //    But in those cases we should not
+    //    fall back to the Qt key from the key event, as that doesn't
+    //    match what the keyboard layout defines. Most keyboard layouts
+    //    explicitly define the base key as the key for these "undefined"
+    //    mappings, but if the keyboard layout does not, we should not
+    //    produce any input in the application, to match what AppKit does
+    //    in this case.
+    //
+    // Otherwise this keys list always produces a partial shortcut match.
+    //
+    if (!pkTotal || (pkTotal == 1 && !possibleKeys[0]))
         return;
 
     int ssActual = d->currentSequences.size();

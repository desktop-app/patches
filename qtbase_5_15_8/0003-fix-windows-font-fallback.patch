diff --git a/src/platformsupport/fontdatabases/windows/qwindowsfontdatabase.cpp b/src/platformsupport/fontdatabases/windows/qwindowsfontdatabase.cpp
index 09d2d916fe..98a10804f4 100644
--- a/src/platformsupport/fontdatabases/windows/qwindowsfontdatabase.cpp
+++ b/src/platformsupport/fontdatabases/windows/qwindowsfontdatabase.cpp
@@ -1710,51 +1710,75 @@ HFONT QWindowsFontDatabase::systemFont()
 
 static const char *other_tryFonts[] = {
     "Arial",
-    "MS UI Gothic",
-    "Gulim",
-    "SimSun",
-    "PMingLiU",
+    "Yu Gothic UI",
+    "Meiryo UI",
+    "Yu Gothic",
+    "Meiryo",
+    "Malgun Gothic",
+    "Microsoft YaHei UI",
+    "Microsoft YaHei",
+    "Microsoft JhengHei UI",
+    "Microsoft JhengHei",
     "Arial Unicode MS",
     0
 };
 
 static const char *jp_tryFonts [] = {
     "Yu Gothic UI",
-    "MS UI Gothic",
+    "Meiryo UI",
+    "Yu Gothic",
+    "Meiryo",
     "Arial",
-    "Gulim",
-    "SimSun",
-    "PMingLiU",
+    "Malgun Gothic",
+    "Microsoft YaHei UI",
+    "Microsoft YaHei",
+    "Microsoft JhengHei UI",
+    "Microsoft JhengHei",
     "Arial Unicode MS",
     0
 };
 
 static const char *ch_CN_tryFonts [] = {
-    "SimSun",
+    "Microsoft YaHei UI",
+    "Microsoft YaHei",
     "Arial",
-    "PMingLiU",
-    "Gulim",
-    "MS UI Gothic",
+    "Microsoft JhengHei UI",
+    "Microsoft JhengHei",
+    "Malgun Gothic",
+    "Yu Gothic UI",
+    "Meiryo UI",
+    "Yu Gothic",
+    "Meiryo",
     "Arial Unicode MS",
     0
 };
 
 static const char *ch_TW_tryFonts [] = {
-    "PMingLiU",
+    "Microsoft JhengHei UI",
+    "Microsoft JhengHei",
     "Arial",
-    "SimSun",
-    "Gulim",
-    "MS UI Gothic",
+    "Microsoft YaHei UI",
+    "Microsoft YaHei",
+    "Malgun Gothic",
+    "Yu Gothic UI",
+    "Meiryo UI",
+    "Yu Gothic",
+    "Meiryo",
     "Arial Unicode MS",
     0
 };
 
 static const char *kr_tryFonts[] = {
-    "Gulim",
+    "Malgun Gothic",
     "Arial",
-    "PMingLiU",
-    "SimSun",
-    "MS UI Gothic",
+    "Microsoft JhengHei UI",
+    "Microsoft JhengHei",
+    "Microsoft YaHei UI",
+    "Microsoft YaHei",
+    "Yu Gothic UI",
+    "Meiryo UI",
+    "Yu Gothic",
+    "Meiryo",
     "Arial Unicode MS",
     0
 };
@@ -1892,6 +1916,9 @@ QStringList QWindowsFontDatabase::extraTryFontsForFamily(const QString &family)
             ++tf;
         }
     }
+    result.append(QStringLiteral("Nirmala UI"));
+    result.append(QStringLiteral("Iskoola Pota"));
+    result.append(QStringLiteral("Ebrima"));
     result.append(QStringLiteral("Segoe UI Emoji"));
     result.append(QStringLiteral("Segoe UI Symbol"));
     return result;
@@ -2042,13 +2069,6 @@ QFontEngine *QWindowsFontDatabase::createEngine(const QFontDef &request, const Q
 
 QFont QWindowsFontDatabase::systemDefaultFont()
 {
-#if QT_VERSION >= 0x060000
-    // Qt 6: Obtain default GUI font (typically "Segoe UI, 9pt", see QTBUG-58610)
-    NONCLIENTMETRICS ncm;
-    ncm.cbSize = FIELD_OFFSET(NONCLIENTMETRICS, lfMessageFont) + sizeof(LOGFONT);
-    SystemParametersInfo(SPI_GETNONCLIENTMETRICS, ncm.cbSize , &ncm, 0);
-    const QFont systemFont = QWindowsFontDatabase::LOGFONT_to_QFont(ncm.lfMessageFont);
-#else
     LOGFONT lf;
     GetObject(QWindowsFontDatabase::systemFont(), sizeof(lf), &lf);
     QFont systemFont =  QWindowsFontDatabase::LOGFONT_to_QFont(lf);
@@ -2060,7 +2080,10 @@ QFont QWindowsFontDatabase::systemDefaultFont()
     // long deprecated; the message font of the NONCLIENTMETRICS structure obtained by
     // SystemParametersInfo(SPI_GETNONCLIENTMETRICS) should be used instead (see
     // QWindowsTheme::refreshFonts(), typically "Segoe UI, 9pt"), which is larger.
-#endif // Qt 5
+    NONCLIENTMETRICS ncm;
+    ncm.cbSize = FIELD_OFFSET(NONCLIENTMETRICS, lfMessageFont) + sizeof(LOGFONT);
+    SystemParametersInfo(SPI_GETNONCLIENTMETRICS, ncm.cbSize , &ncm, 0);
+    systemFont.setPointSizeF(QWindowsFontDatabase::LOGFONT_to_QFont(ncm.lfMessageFont).pointSizeF());
     qCDebug(lcQpaFonts) << __FUNCTION__ << systemFont;
     return systemFont;
 }

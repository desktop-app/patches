diff --git a/src/gui/painting/qbackingstore.cpp b/src/gui/painting/qbackingstore.cpp
index f609cddd3c..b1d2b9adc4 100644
--- a/src/gui/painting/qbackingstore.cpp
+++ b/src/gui/painting/qbackingstore.cpp
@@ -50,7 +50,7 @@ public:
     QScopedPointer<QImage> highDpiBackingstore;
     QRegion staticContents;
     QSize size;
-    bool downscale = qEnvironmentVariableIntValue("QT_WIDGETS_HIGHDPI_DOWNSCALE") > 0;
+    bool downscale = qEnvironmentVariableIntValue("QT_WIDGETS_HIGHDPI_DOWNSCALE") > 0 || qApp->property("_q_widgets_highdpi_downscale").toBool();
 };
 
 /*!
diff --git a/src/widgets/kernel/qwidget.cpp b/src/widgets/kernel/qwidget.cpp
index 6b16677804..f096132480 100644
--- a/src/widgets/kernel/qwidget.cpp
+++ b/src/widgets/kernel/qwidget.cpp
@@ -12894,7 +12894,7 @@ int QWidget::metric(PaintDeviceMetric m) const
     auto resolveDevicePixelRatio = [this, screen]() -> qreal {
 
         // Note: keep in sync with QBackingStorePrivate::backingStoreDevicePixelRatio()!
-        static bool downscale = qEnvironmentVariableIntValue("QT_WIDGETS_HIGHDPI_DOWNSCALE") > 0;
+        static bool downscale = qEnvironmentVariableIntValue("QT_WIDGETS_HIGHDPI_DOWNSCALE") > 0 || qApp->property("_q_widgets_highdpi_downscale").toBool();
         QWindow *window = this->window()->windowHandle();
         if (window)
             return downscale ? std::ceil(window->devicePixelRatio()) : window->devicePixelRatio();

diff --git a/src/dispatch_common.c b/src/dispatch_common.c
index 592df38..7846aea 100644
--- a/src/dispatch_common.c
+++ b/src/dispatch_common.c
@@ -872,7 +872,7 @@ epoxy_get_proc_address(const char *name)
 }
 
 WRAPPER_VISIBILITY (void)
-WRAPPER(epoxy_glBegin)(GLenum primtype)
+WRAPPER(glBegin)(GLenum primtype)
 {
 #ifdef _WIN32
     InterlockedIncrement(&api.begin_count);
@@ -882,13 +882,13 @@ WRAPPER(epoxy_glBegin)(GLenum primtype)
     pthread_mutex_unlock(&api.mutex);
 #endif
 
-    epoxy_glBegin_unwrapped(primtype);
+    glBegin_unwrapped(primtype);
 }
 
 WRAPPER_VISIBILITY (void)
-WRAPPER(epoxy_glEnd)(void)
+WRAPPER(glEnd)(void)
 {
-    epoxy_glEnd_unwrapped();
+    glEnd_unwrapped();
 
 #ifdef _WIN32
     InterlockedDecrement(&api.begin_count);
@@ -899,8 +899,17 @@ WRAPPER(epoxy_glEnd)(void)
 #endif
 }
 
-PFNGLBEGINPROC epoxy_glBegin = epoxy_glBegin_wrapped;
-PFNGLENDPROC epoxy_glEnd = epoxy_glEnd_wrapped;
+void
+glBegin(GLenum primtype)
+{
+    glBegin_wrapped(primtype);
+}
+
+void
+glEnd(void)
+{
+    glEnd_wrapped();
+}
 
 epoxy_resolver_failure_handler_t epoxy_resolver_failure_handler;
 
diff --git a/src/dispatch_common.h b/src/dispatch_common.h
index a136943..b5273e2 100644
--- a/src/dispatch_common.h
+++ b/src/dispatch_common.h
@@ -87,22 +87,30 @@
 #define WRAPPER_VISIBILITY(type) static type GLAPIENTRY
 #define WRAPPER(x) x ## _wrapped
 
-#define GEN_GLOBAL_REWRITE_PTR(name, args, passthrough)          \
-    static void EPOXY_CALLSPEC                                   \
-    name##_global_rewrite_ptr args                               \
-    {                                                            \
-        if (name == (void *)name##_global_rewrite_ptr)           \
-            name = (void *)name##_resolver();                    \
-        name passthrough;                                        \
+#define GEN_GLOBAL_REWRITE_PTR(name, args, passthrough)            \
+    void (*name##_global_rewrite_ptr) args;                        \
+    void EPOXY_CALLSPEC                                            \
+    name args                                                      \
+    {                                                              \
+        static bool name##_rewritten = false;                      \
+        if (!name##_rewritten) {                                   \
+            name##_global_rewrite_ptr = (void *)name##_resolver(); \
+            name##_rewritten = true;                               \
+        }                                                          \
+        name##_global_rewrite_ptr passthrough;                     \
     }
 
-#define GEN_GLOBAL_REWRITE_PTR_RET(ret, name, args, passthrough) \
-    static ret EPOXY_CALLSPEC                                    \
-    name##_global_rewrite_ptr args                               \
-    {                                                            \
-        if (name == (void *)name##_global_rewrite_ptr)           \
-            name = (void *)name##_resolver();                    \
-        return name passthrough;                                 \
+#define GEN_GLOBAL_REWRITE_PTR_RET(ret, name, args, passthrough)   \
+    ret (*name##_global_rewrite_ptr) args;                         \
+    ret EPOXY_CALLSPEC                                             \
+    name args                                                      \
+    {                                                              \
+        static bool name##_rewritten = false;                      \
+        if (!name##_rewritten) {                                   \
+            name##_global_rewrite_ptr = (void *)name##_resolver(); \
+            name##_rewritten = true;                               \
+        }                                                          \
+        return name##_global_rewrite_ptr passthrough;              \
     }
 
 #if USING_DISPATCH_TABLE
@@ -180,10 +188,8 @@ void *epoxy_conservative_glx_dlsym(const char *name, bool exit_if_fails);
 bool epoxy_load_glx(bool exit_if_fails, bool load);
 bool epoxy_load_egl(bool exit_if_fails, bool load);
 
-#define glBegin_unwrapped epoxy_glBegin_unwrapped
-#define glEnd_unwrapped epoxy_glEnd_unwrapped
-extern void UNWRAPPED_PROTO(glBegin_unwrapped)(GLenum primtype);
-extern void UNWRAPPED_PROTO(glEnd_unwrapped)(void);
+void glBegin_unwrapped(GLenum primtype);
+void glEnd_unwrapped(void);
 
 extern epoxy_resolver_failure_handler_t epoxy_resolver_failure_handler;
 
diff --git a/src/gen_dispatch.py b/src/gen_dispatch.py
index 3daad84..862b18c 100755
--- a/src/gen_dispatch.py
+++ b/src/gen_dispatch.py
@@ -547,17 +547,14 @@ class Generator(object):
         self.write_function_ptr_typedefs()
 
         for func in self.sorted_functions:
-            self.outln('EPOXY_PUBLIC {0} (EPOXY_CALLSPEC *epoxy_{1})({2});'.format(func.ret_type,
+            self.outln('EPOXY_PUBLIC {0} EPOXY_CALLSPEC {1}({2});'.format(func.ret_type,
                                                                                    func.name,
                                                                                    func.args_decl))
             self.outln('')
 
-        for func in self.sorted_functions:
-            self.outln('#define {0} epoxy_{0}'.format(func.name))
-
     def write_function_ptr_resolver(self, func):
         self.outln('static {0}'.format(func.ptr_type))
-        self.outln('epoxy_{0}_resolver(void)'.format(func.wrapped_name))
+        self.outln('{0}_resolver(void)'.format(func.wrapped_name))
         self.outln('{')
 
         providers = []
@@ -855,9 +852,6 @@ class Generator(object):
 
         self.outln('#endif /* !USING_DISPATCH_TABLE */')
 
-        for func in self.sorted_functions:
-            self.write_function_pointer(func)
-
     def close(self):
         if self.out_file:
             self.out_file.close()

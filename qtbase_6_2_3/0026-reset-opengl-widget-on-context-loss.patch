diff --git a/src/opengl/qplatformbackingstoreopenglsupport.cpp b/src/opengl/qplatformbackingstoreopenglsupport.cpp
index 30532c5b4b..11d43fc67b 100644
--- a/src/opengl/qplatformbackingstoreopenglsupport.cpp
+++ b/src/opengl/qplatformbackingstoreopenglsupport.cpp
@@ -147,11 +147,13 @@ QPlatformBackingStoreOpenGLSupport::~QPlatformBackingStoreOpenGLSupport() {
         QOffscreenSurface offscreenSurface;
         offscreenSurface.setFormat(context->format());
         offscreenSurface.create();
-        context->makeCurrent(&offscreenSurface);
-        if (textureId)
-            context->functions()->glDeleteTextures(1, &textureId);
-        if (blitter)
-            blitter->destroy();
+        if (context->makeCurrent(&offscreenSurface)) {
+            // Trying to fix a crash on context loss.
+            if (textureId)
+                context->functions()->glDeleteTextures(1, &textureId);
+            if (blitter)
+                blitter->destroy();
+        }
     }
     delete blitter;
 }
diff --git a/src/openglwidgets/qopenglwidget.cpp b/src/openglwidgets/qopenglwidget.cpp
index 2ae1a7f215..6ceca4df87 100644
--- a/src/openglwidgets/qopenglwidget.cpp
+++ b/src/openglwidgets/qopenglwidget.cpp
@@ -591,9 +591,11 @@ void QOpenGLWidgetPaintDevice::ensureActiveTarget()
     if (!wd->initialized)
         return;
 
-    if (QOpenGLContext::currentContext() != wd->context)
+    if (QOpenGLContext::currentContext() != wd->context) {
         d->w->makeCurrent();
-    else
+        if (!wd->initialized)
+            return; // Trying to fix a crash on context loss.
+    } else
         wd->fbo->bind();
 
     if (!wd->inPaintGL)
@@ -673,7 +675,11 @@ void QOpenGLWidgetPrivate::recreateFbo()
 
     emit q->aboutToResize();
 
-    context->makeCurrent(surface);
+    if (!context->makeCurrent(surface)) {
+        // Trying to fix a crash on context loss.
+        reset();
+        return;
+    }
 
     delete fbo;
     fbo = nullptr;
@@ -714,6 +720,9 @@ void QOpenGLWidgetPrivate::beginCompose()
     if (flushPending) {
         flushPending = false;
         q->makeCurrent();
+        if (!initialized) {
+            return;
+        }
         static_cast<QOpenGLExtensions *>(context->functions())->flushShared();
     }
     hasBeenComposed = true;
@@ -756,6 +765,7 @@ void QOpenGLWidgetPrivate::initialize()
     }
     if (Q_UNLIKELY(!ctx->create())) {
         qWarning("QOpenGLWidget: Failed to create context");
+        reset();
         return;
     }
 
@@ -786,6 +796,7 @@ void QOpenGLWidgetPrivate::initialize()
 
     if (Q_UNLIKELY(!ctx->makeCurrent(surface))) {
         qWarning("QOpenGLWidget: Failed to make context current");
+        reset();
         return;
     }
 
@@ -804,6 +815,9 @@ void QOpenGLWidgetPrivate::resolveSamples()
     Q_Q(QOpenGLWidget);
     if (resolvedFbo) {
         q->makeCurrent();
+        if (!initialized) {
+            return;
+        }
         QRect rect(QPoint(0, 0), fbo->size());
         QOpenGLFramebufferObject::blitFramebuffer(resolvedFbo, rect, fbo, rect);
         flushPending = true;
@@ -837,6 +851,8 @@ void QOpenGLWidgetPrivate::render()
         return;
 
     q->makeCurrent();
+    if (!initialized)
+        return; // Trying to fix a crash on context loss.
 
     if (updateBehavior == QOpenGLWidget::NoPartialUpdate && hasBeenComposed) {
         invalidateFbo();
@@ -883,14 +899,21 @@ QImage QOpenGLWidgetPrivate::grabFramebuffer()
     if (!fbo) // could be completely offscreen, without ever getting a resize event
         recreateFbo();
 
+    if (!fbo)
+        return QImage(); // Trying to fix a crash on context loss.
+
     if (!inPaintGL)
         render();
 
     if (resolvedFbo) {
         resolveSamples();
+        if (!initialized)
+            return QImage(); // Trying to fix a crash on context loss.
         resolvedFbo->bind();
     } else {
         q->makeCurrent();
+        if (!initialized)
+            return QImage(); // Trying to fix a crash on context loss.
     }
 
     const bool hasAlpha = q->format().hasAlpha();
@@ -1100,7 +1123,12 @@ void QOpenGLWidget::makeCurrent()
     if (!d->initialized)
         return;
 
-    d->context->makeCurrent(d->surface);
+    if (!d->context->makeCurrent(d->surface)) {
+        // Trying to fix a crash on context loss.
+        // If makeCurrent() failed, that means we're not initialized any more.
+        d->initialized = false; // This prevents infinite recursion to makeCurrent().
+        d->reset();
+    }
 
     if (d->fbo) // there may not be one if we are in reset()
         d->fbo->bind();
@@ -1230,6 +1258,9 @@ void QOpenGLWidget::resizeEvent(QResizeEvent *e)
         return;
 
     d->recreateFbo();
+    if (!d->fbo)
+        return; // Trying to fix a crash on context loss.
+
     resizeGL(width(), height());
     d->sendPaintEvent(QRect(QPoint(0, 0), size()));
 }

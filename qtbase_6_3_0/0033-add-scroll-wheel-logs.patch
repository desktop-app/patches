diff --git a/src/plugins/platforms/xcb/qxcbconnection.cpp b/src/plugins/platforms/xcb/qxcbconnection.cpp
index b19b070a4d..348cba4ef5 100644
--- a/src/plugins/platforms/xcb/qxcbconnection.cpp
+++ b/src/plugins/platforms/xcb/qxcbconnection.cpp
@@ -706,6 +706,12 @@ void QXcbConnection::handleXcbEvent(xcb_generic_event_t *event)
         break;
     }
     case XCB_GE_GENERIC:
+
+        if (hasXInput2() && isXIType(event, XCB_INPUT_MOTION)) {
+            // Patch: Debug #17254
+            qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel got in XCB_GE_GENERIC";
+        }
+
         // Here the windowEventListener is invoked from xi2HandleEvent()
         if (hasXInput2() && isXIEvent(event))
             xi2HandleEvent(reinterpret_cast<xcb_ge_event_t *>(event));
@@ -949,16 +955,25 @@ bool QXcbConnection::compressEvent(xcb_generic_event_t *event) const
 
         // compress XI_Motion
         if (isXIType(event, XCB_INPUT_MOTION)) {
+
+            // Patch: Debug #17254
+            qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel check XCB_INPUT_MOTION compress";
+
 #if QT_CONFIG(tabletevent)
             auto xdev = reinterpret_cast<xcb_input_motion_event_t *>(event);
             if (!QCoreApplication::testAttribute(Qt::AA_CompressTabletEvents) &&
                     const_cast<QXcbConnection *>(this)->tabletDataForDevice(xdev->sourceid))
                 return false;
 #endif // QT_CONFIG(tabletevent)
-            return m_eventQueue->peek(QXcbEventQueue::PeekRetainMatch,
+            const auto compressed = m_eventQueue->peek(QXcbEventQueue::PeekRetainMatch,
                                       [this](xcb_generic_event_t *next, int) {
                 return isXIType(next, XCB_INPUT_MOTION);
             });
+
+            // Patch: Debug #17254
+            qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel compress XCB_INPUT_MOTION" << (compressed ? "YES" : "NO");
+
+            return compressed;
         }
 
         // compress XI_TouchUpdate for the same touch point id
diff --git a/src/plugins/platforms/xcb/qxcbconnection_xi2.cpp b/src/plugins/platforms/xcb/qxcbconnection_xi2.cpp
index 9abdfd422b..6c891cd2e1 100644
--- a/src/plugins/platforms/xcb/qxcbconnection_xi2.cpp
+++ b/src/plugins/platforms/xcb/qxcbconnection_xi2.cpp
@@ -652,6 +652,10 @@ void QXcbConnection::xi2HandleEvent(xcb_ge_event_t *event)
     case XCB_INPUT_TOUCH_END:
     {
         xiDeviceEvent = xiEvent;
+
+        // Patch: Debug #17254
+        qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel got event" << int(xiEvent->event_type) << "in xi2HandleEvent";
+
         eventListener = windowEventListenerFromId(xiDeviceEvent->event);
         sourceDeviceId = xiDeviceEvent->sourceid; // use the actual device id instead of the master
         break;
@@ -687,6 +691,10 @@ void QXcbConnection::xi2HandleEvent(xcb_ge_event_t *event)
     }
 #endif // QT_CONFIG(tabletevent)
 
+    // Patch: Debug #17254
+    if (xiEvent->event_type == XCB_INPUT_MOTION)
+        qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel got input_motion in xi2HandleEvent";
+
     if (auto device = QPointingDevicePrivate::pointingDeviceById(sourceDeviceId))
         xi2HandleScrollEvent(event, device);
 
@@ -1065,13 +1073,29 @@ void QXcbConnection::xi2HandleScrollEvent(void *event, const QPointingDevice *de
 {
     auto *xiDeviceEvent = reinterpret_cast<qt_xcb_input_device_event_t *>(event);
 
+    // Patch: Debug #17254
+    qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel got in xi2HandleScrollEvent";
+
     const QXcbScrollingDevice *scrollDev = qobject_cast<const QXcbScrollingDevice *>(dev);
+
+    // Patch: Debug #17254
+    qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel got scrollDev" << quintptr(scrollDev);
+
     if (!scrollDev || !scrollDev->capabilities().testFlag(QInputDevice::Capability::Scroll))
         return;
     const QXcbScrollingDevicePrivate *scrollingDevice = QXcbScrollingDevice::get(scrollDev);
 
+    // Patch: Debug #17254
+    qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel from device" << scrollingDevice->systemId << "got device";
+
     if (xiDeviceEvent->event_type == XCB_INPUT_MOTION && scrollingDevice->orientations) {
+        // Patch: Debug #17254
+        qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel from device" << scrollingDevice->systemId << "got XCB_INPUT_MOTION";
+
         if (QXcbWindow *platformWindow = platformWindowFromId(xiDeviceEvent->event)) {
+            // Patch: Debug #17254
+            qCDebug(lcQpaXInputEvents) << "(tdesktop) scroll wheel from device" << scrollingDevice->systemId << "got playformWindow";
+
             QPoint rawDelta;
             QPoint angleDelta;
             double value;

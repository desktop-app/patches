diff --git a/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp b/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp
index 6fc90035ed..b34f8623bb 100644
--- a/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp
+++ b/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp
@@ -1174,7 +1174,14 @@ void QWindowsNativeFileDialogBase::selectFile(const QString &fileName) const
     // Hack to prevent CLSIDs from being set as file name due to
     // QFileDialogPrivate::initialSelection() being QString-based.
     if (!isClsid(fileName))
-        m_fileDialog->SetFileName((wchar_t*)fileName.utf16());
+    // Patch: Fix handle of full fileName.
+    {
+        QString file = QDir::toNativeSeparators(fileName);
+        int lastBackSlash = file.lastIndexOf(QChar::fromLatin1('\\'));
+        if (lastBackSlash >= 0)
+            file = file.mid(lastBackSlash + 1);
+        m_fileDialog->SetFileName((wchar_t*)file.utf16());;
+    }
 }
 
 // Return the index of the selected filter, accounting for QFileDialog
@@ -1449,7 +1456,8 @@ static QString createTemporaryItemCopy(QWindowsShellItem &qItem, QString *errorM
 static QUrl itemToDialogUrl(QWindowsShellItem &qItem, QString *errorMessage)
 {
     QUrl url = qItem.url();
-    if (url.isLocalFile() || url.scheme().startsWith(u"http"))
+    // Patch: Make loaded 'http' resources copy.
+    if (url.isLocalFile()/*|| url.scheme().startsWith(u"http")*/)
         return url;
     const QString path = qItem.path();
     if (path.isEmpty() && !qItem.isDir() && qItem.canStream()) {

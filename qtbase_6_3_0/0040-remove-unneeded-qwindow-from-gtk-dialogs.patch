diff --git a/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.cpp b/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.cpp
index 4f417d77d8..5272200161 100644
--- a/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.cpp
+++ b/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.cpp
@@ -66,12 +66,10 @@
 
 QT_BEGIN_NAMESPACE
 
-class QGtk3Dialog : public QWindow
+class QGtk3Dialog
 {
-    Q_OBJECT
-
 public:
-    QGtk3Dialog(GtkWidget *gtkWidget);
+    QGtk3Dialog(GtkWidget *gtkWidget, QPlatformDialogHelper *helper);
     ~QGtk3Dialog();
 
     GtkDialog *gtkDialog() const;
@@ -80,23 +78,20 @@ public:
     bool show(Qt::WindowFlags flags, Qt::WindowModality modality, QWindow *parent);
     void hide();
 
-Q_SIGNALS:
-    void accept();
-    void reject();
-
 protected:
-    static void onResponse(QGtk3Dialog *dialog, int response);
-
-private slots:
-    void onParentWindowDestroyed();
+    static void onResponse(QPlatformDialogHelper *helper, int response);
 
 private:
     GtkWidget *gtkWidget;
+    QPlatformDialogHelper *helper;
+    Qt::WindowModality modality;
 };
 
-QGtk3Dialog::QGtk3Dialog(GtkWidget *gtkWidget) : gtkWidget(gtkWidget)
+QGtk3Dialog::QGtk3Dialog(GtkWidget *gtkWidget, QPlatformDialogHelper *helper)
+    : gtkWidget(gtkWidget)
+    , helper(helper)
 {
-    g_signal_connect_swapped(G_OBJECT(gtkWidget), "response", G_CALLBACK(onResponse), this);
+    g_signal_connect_swapped(G_OBJECT(gtkWidget), "response", G_CALLBACK(onResponse), helper);
     g_signal_connect(G_OBJECT(gtkWidget), "delete-event", G_CALLBACK(gtk_widget_hide_on_delete), NULL);
 }
 
@@ -113,27 +108,22 @@ GtkDialog *QGtk3Dialog::gtkDialog() const
 
 void QGtk3Dialog::exec()
 {
-    if (modality() == Qt::ApplicationModal) {
+    if (modality == Qt::ApplicationModal) {
         // block input to the whole app, including other GTK dialogs
         gtk_dialog_run(gtkDialog());
     } else {
         // block input to the window, allow input to other GTK dialogs
         QEventLoop loop;
-        connect(this, SIGNAL(accept()), &loop, SLOT(quit()));
-        connect(this, SIGNAL(reject()), &loop, SLOT(quit()));
+        loop.connect(helper, SIGNAL(accept()), SLOT(quit()));
+        loop.connect(helper, SIGNAL(reject()), SLOT(quit()));
         loop.exec();
     }
 }
 
 bool QGtk3Dialog::show(Qt::WindowFlags flags, Qt::WindowModality modality, QWindow *parent)
 {
-    if (parent) {
-        connect(parent, &QWindow::destroyed, this, &QGtk3Dialog::onParentWindowDestroyed,
-                Qt::UniqueConnection);
-    }
-    setParent(parent);
-    setFlags(flags);
-    setModality(modality);
+    Q_UNUSED(flags);
+    this->modality = modality;
 
     gtk_widget_realize(gtkWidget); // creates X window
 
@@ -149,7 +139,6 @@ bool QGtk3Dialog::show(Qt::WindowFlags flags, Qt::WindowModality modality, QWind
 
     if (modality != Qt::NonModal) {
         gdk_window_set_modal_hint(gdkWindow, true);
-        QGuiApplicationPrivate::showModalWindow(this);
     }
 
     gtk_widget_show(gtkWidget);
@@ -159,30 +148,20 @@ bool QGtk3Dialog::show(Qt::WindowFlags flags, Qt::WindowModality modality, QWind
 
 void QGtk3Dialog::hide()
 {
-    QGuiApplicationPrivate::hideModalWindow(this);
     gtk_widget_hide(gtkWidget);
 }
 
-void QGtk3Dialog::onResponse(QGtk3Dialog *dialog, int response)
+void QGtk3Dialog::onResponse(QPlatformDialogHelper *helper, int response)
 {
     if (response == GTK_RESPONSE_OK)
-        emit dialog->accept();
+        emit helper->accept();
     else
-        emit dialog->reject();
-}
-
-void QGtk3Dialog::onParentWindowDestroyed()
-{
-    // The QGtk3*DialogHelper classes own this object. Make sure the parent doesn't delete it.
-    setParent(nullptr);
+        emit helper->reject();
 }
 
 QGtk3ColorDialogHelper::QGtk3ColorDialogHelper()
 {
-    d.reset(new QGtk3Dialog(gtk_color_chooser_dialog_new("", nullptr)));
-    connect(d.data(), SIGNAL(accept()), this, SLOT(onAccepted()));
-    connect(d.data(), SIGNAL(reject()), this, SIGNAL(reject()));
-
+    d.reset(new QGtk3Dialog(gtk_color_chooser_dialog_new("", nullptr), this));
     g_signal_connect_swapped(d->gtkDialog(), "notify::rgba", G_CALLBACK(onColorChanged), this);
 }
 
@@ -227,11 +206,6 @@ QColor QGtk3ColorDialogHelper::currentColor() const
     return QColor::fromRgbF(gdkColor.red, gdkColor.green, gdkColor.blue, gdkColor.alpha);
 }
 
-void QGtk3ColorDialogHelper::onAccepted()
-{
-    emit accept();
-}
-
 void QGtk3ColorDialogHelper::onColorChanged(QGtk3ColorDialogHelper *dialog)
 {
     emit dialog->currentColorChanged(dialog->currentColor());
@@ -251,10 +225,7 @@ QGtk3FileDialogHelper::QGtk3FileDialogHelper()
                                                         GTK_FILE_CHOOSER_ACTION_OPEN,
                                                         qUtf8Printable(QGtk3Theme::defaultStandardButtonText(QPlatformDialogHelper::Cancel)), GTK_RESPONSE_CANCEL,
                                                         qUtf8Printable(QGtk3Theme::defaultStandardButtonText(QPlatformDialogHelper::Ok)), GTK_RESPONSE_OK,
-                                                        NULL)));
-
-    connect(d.data(), SIGNAL(accept()), this, SLOT(onAccepted()));
-    connect(d.data(), SIGNAL(reject()), this, SIGNAL(reject()));
+                                                        NULL), this));
 
     g_signal_connect(GTK_FILE_CHOOSER(d->gtkDialog()), "selection-changed", G_CALLBACK(onSelectionChanged), this);
     g_signal_connect_swapped(GTK_FILE_CHOOSER(d->gtkDialog()), "current-folder-changed", G_CALLBACK(onCurrentFolderChanged), this);
@@ -377,11 +348,6 @@ QString QGtk3FileDialogHelper::selectedNameFilter() const
     return _filterNames.value(gtkFilter);
 }
 
-void QGtk3FileDialogHelper::onAccepted()
-{
-    emit accept();
-}
-
 void QGtk3FileDialogHelper::onSelectionChanged(GtkDialog *gtkDialog, QGtk3FileDialogHelper *helper)
 {
     QString selection;
@@ -537,10 +503,7 @@ void QGtk3FileDialogHelper::setNameFilters(const QStringList &filters)
 
 QGtk3FontDialogHelper::QGtk3FontDialogHelper()
 {
-    d.reset(new QGtk3Dialog(gtk_font_chooser_dialog_new("", nullptr)));
-    connect(d.data(), SIGNAL(accept()), this, SLOT(onAccepted()));
-    connect(d.data(), SIGNAL(reject()), this, SIGNAL(reject()));
-
+    d.reset(new QGtk3Dialog(gtk_font_chooser_dialog_new("", nullptr), this));
     g_signal_connect_swapped(d->gtkDialog(), "notify::font", G_CALLBACK(onFontChanged), this);
 }
 
@@ -644,11 +607,6 @@ QFont QGtk3FontDialogHelper::currentFont() const
     return font;
 }
 
-void QGtk3FontDialogHelper::onAccepted()
-{
-    emit accept();
-}
-
 void QGtk3FontDialogHelper::onFontChanged(QGtk3FontDialogHelper *dialog)
 {
     emit dialog->currentFontChanged(dialog->currentFont());
diff --git a/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.h b/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.h
index 1a055ac055..3433b39f75 100644
--- a/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.h
+++ b/src/plugins/platformthemes/gtk3/qgtk3dialoghelpers.h
@@ -71,9 +71,6 @@ public:
     void setCurrentColor(const QColor &color) override;
     QColor currentColor() const override;
 
-private Q_SLOTS:
-    void onAccepted();
-
 private:
     static void onColorChanged(QGtk3ColorDialogHelper *helper);
     void applyOptions();
@@ -102,9 +99,6 @@ public:
     void selectNameFilter(const QString &filter) override;
     QString selectedNameFilter() const override;
 
-private Q_SLOTS:
-    void onAccepted();
-
 private:
     static void onSelectionChanged(GtkDialog *dialog, QGtk3FileDialogHelper *helper);
     static void onCurrentFolderChanged(QGtk3FileDialogHelper *helper);
@@ -138,9 +132,6 @@ public:
     void setCurrentFont(const QFont &font) override;
     QFont currentFont() const override;
 
-private Q_SLOTS:
-    void onAccepted();
-
 private:
     static void onFontChanged(QGtk3FontDialogHelper *helper);
     void applyOptions();

diff --git a/src/corelib/kernel/qmetatype.cpp b/src/corelib/kernel/qmetatype.cpp
index 65745bf06a..a873061694 100644
--- a/src/corelib/kernel/qmetatype.cpp
+++ b/src/corelib/kernel/qmetatype.cpp
@@ -590,11 +590,21 @@ void *QMetaType::create(const void *copy) const
 {
     if (d_ptr && (copy ? !!d_ptr->copyCtr : !!d_ptr->defaultCtr)) {
         void *where =
+// Patch: operator new(size, alignment) is available only on 10.14+.
+#ifdef Q_OS_MAC
+            nullptr;
+        if (d_ptr->alignment > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
+            posix_memalign(&where, d_ptr->alignment, d_ptr->size);
+        } else {
+            where = operator new(d_ptr->size);
+        }
+#else
 #ifdef __STDCPP_DEFAULT_NEW_ALIGNMENT__
             d_ptr->alignment > __STDCPP_DEFAULT_NEW_ALIGNMENT__ ?
                 operator new(d_ptr->size, std::align_val_t(d_ptr->alignment)) :
 #endif
                 operator new(d_ptr->size);
+#endif
         return construct(where, copy);
     }
     return nullptr;
@@ -615,7 +625,12 @@ void QMetaType::destroy(void *data) const
         if (d_ptr->dtor)
             d_ptr->dtor(d_ptr, data);
         if (d_ptr->alignment > __STDCPP_DEFAULT_NEW_ALIGNMENT__) {
+// Patch: operator new(size, alignment) is available only on 10.14+.
+#ifdef Q_OS_MAC
+            std::free(data);
+#else
             operator delete(data, std::align_val_t(d_ptr->alignment));
+#endif
         } else {
             operator delete(data);
         }

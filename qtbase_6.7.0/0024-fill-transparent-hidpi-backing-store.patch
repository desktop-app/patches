diff --git a/src/gui/painting/qbackingstore.cpp b/src/gui/painting/qbackingstore.cpp
index ac89e106c8..6f81b4f7c9 100644
--- a/src/gui/painting/qbackingstore.cpp
+++ b/src/gui/painting/qbackingstore.cpp
@@ -143,6 +143,14 @@ void QBackingStore::beginPaint(const QRegion &region)
                 new QImage(source->bits(), source->width(), source->height(), source->bytesPerLine(), source->format()));
 
         d_ptr->highDpiBackingstore->setDevicePixelRatio(d_ptr->backingStoreDevicePixelRatio());
+
+        if (d_ptr->highDpiBackingstore->hasAlphaChannel()) {
+            QPainter p(d_ptr->highDpiBackingstore.data());
+            p.setCompositionMode(QPainter::CompositionMode_Source);
+            const QColor blank = Qt::transparent;
+            for (const QRect &rect : region)
+                p.fillRect(rect, blank);
+        }
     } else {
         d_ptr->highDpiBackingstore.reset();
     }
@@ -158,7 +166,7 @@ QPaintDevice *QBackingStore::paintDevice()
 {
     QPaintDevice *device = handle()->paintDevice();
 
-    if (d_ptr->highDpiBackingstore)
+    if (!qFuzzyCompare(d_ptr->deviceIndependentToNativeFactor(), qreal(1)) && device->devType() == QInternal::Image)
         return d_ptr->highDpiBackingstore.data();
 
     return device;
diff --git a/src/gui/painting/qrasterbackingstore.cpp b/src/gui/painting/qrasterbackingstore.cpp
index 3b3ef2fd2e..6d257a8ee7 100644
--- a/src/gui/painting/qrasterbackingstore.cpp
+++ b/src/gui/painting/qrasterbackingstore.cpp
@@ -71,7 +71,7 @@ void QRasterBackingStore::beginPaint(const QRegion &region)
             m_image.fill(Qt::transparent);
     }
 
-    if (!m_image.hasAlphaChannel())
+    if (backingStore()->paintDevice() != paintDevice() || !m_image.hasAlphaChannel())
         return;
 
     QPainter painter(&m_image);
diff --git a/src/opengl/qopenglcompositorbackingstore.cpp b/src/opengl/qopenglcompositorbackingstore.cpp
index 8efccce579..cc576be132 100644
--- a/src/opengl/qopenglcompositorbackingstore.cpp
+++ b/src/opengl/qopenglcompositorbackingstore.cpp
@@ -3,6 +3,7 @@
 
 #include <QtGui/QOpenGLContext>
 #include <QtGui/QWindow>
+#include <QtGui/QBackingStore>
 #include <QtGui/QPainter>
 #include <qpa/qplatformbackingstore.h>
 #include <private/qwindow_p.h>
@@ -235,7 +236,7 @@ void QOpenGLCompositorBackingStore::beginPaint(const QRegion &region)
 {
     m_dirty |= region;
 
-    if (m_image.hasAlphaChannel()) {
+    if (backingStore()->paintDevice() == paintDevice() && m_image.hasAlphaChannel()) {
         QPainter p(&m_image);
         p.setCompositionMode(QPainter::CompositionMode_Source);
         for (const QRect &r : region)
diff --git a/src/platformsupport/fbconvenience/qfbbackingstore.cpp b/src/platformsupport/fbconvenience/qfbbackingstore.cpp
index 8443c77dd3..6e164dddc4 100644
--- a/src/platformsupport/fbconvenience/qfbbackingstore.cpp
+++ b/src/platformsupport/fbconvenience/qfbbackingstore.cpp
@@ -7,6 +7,7 @@
 
 #include <qpa/qplatformwindow.h>
 #include <QtGui/qscreen.h>
+#include <QtGui/qbackingstore.h>
 #include <QtGui/qpainter.h>
 
 QT_BEGIN_NAMESPACE
@@ -65,7 +66,7 @@ void QFbBackingStore::beginPaint(const QRegion &region)
 {
     lock();
 
-    if (mImage.hasAlphaChannel()) {
+    if (backingStore()->paintDevice() == paintDevice() && mImage.hasAlphaChannel()) {
         QPainter p(&mImage);
         p.setCompositionMode(QPainter::CompositionMode_Source);
         for (const QRect &r : region)
diff --git a/src/plugins/platforms/cocoa/qcocoabackingstore.mm b/src/plugins/platforms/cocoa/qcocoabackingstore.mm
index 8f50bc5834..53bc3fe921 100644
--- a/src/plugins/platforms/cocoa/qcocoabackingstore.mm
+++ b/src/plugins/platforms/cocoa/qcocoabackingstore.mm
@@ -10,6 +10,7 @@
 
 #include <QtCore/qmath.h>
 #include <QtCore/private/qcore_mac_p.h>
+#include <QtGui/qbackingstore.h>
 #include <QtGui/qpainter.h>
 
 #include <QuartzCore/CATransaction.h>
@@ -97,7 +98,7 @@ void QCALayerBackingStore::beginPaint(const QRegion &region)
     // Although undocumented, QBackingStore::beginPaint expects the painted region
     // to be cleared before use if the window has a surface format with an alpha.
     // Fresh IOSurfaces are already cleared, so we don't need to clear those.
-    if (m_clearSurfaceOnPaint && !bufferWasRecreated && window()->format().hasAlpha()) {
+    if (backingStore()->paintDevice() == paintDevice() && m_clearSurfaceOnPaint && !bufferWasRecreated && window()->format().hasAlpha()) {
         qCDebug(lcQpaBackingStore) << "Clearing" << region << "before use";
         QPainter painter(m_buffers.back()->asImage());
         painter.setCompositionMode(QPainter::CompositionMode_Source);
diff --git a/src/plugins/platforms/direct2d/qwindowsdirect2dbackingstore.cpp b/src/plugins/platforms/direct2d/qwindowsdirect2dbackingstore.cpp
index 7ababe6c65..1a84013ec2 100644
--- a/src/plugins/platforms/direct2d/qwindowsdirect2dbackingstore.cpp
+++ b/src/plugins/platforms/direct2d/qwindowsdirect2dbackingstore.cpp
@@ -12,6 +12,7 @@
 
 #include "qwindowscontext.h"
 
+#include <QtGui/qbackingstore.h>
 #include <QtGui/qpainter.h>
 #include <QtGui/qwindow.h>
 #include <QtCore/qdebug.h>
@@ -53,6 +54,9 @@ void QWindowsDirect2DBackingStore::beginPaint(const QRegion &region)
     QPixmap *pixmap = nativeWindow(window())->pixmap();
     bitmap(pixmap)->deviceContext()->begin();
 
+    if (backingStore()->paintDevice() != paintDevice())
+        return;
+
     QPainter painter(pixmap);
     QColor clear(Qt::transparent);
 
diff --git a/src/plugins/platforms/qnx/qqnxrasterbackingstore.cpp b/src/plugins/platforms/qnx/qqnxrasterbackingstore.cpp
index cf80e44f84..a52d7effad 100644
--- a/src/plugins/platforms/qnx/qqnxrasterbackingstore.cpp
+++ b/src/plugins/platforms/qnx/qqnxrasterbackingstore.cpp
@@ -7,6 +7,7 @@
 #include "qqnxglobal.h"
 
 #include <QtCore/QDebug>
+#include <QtGui/QBackingStore>
 
 #include <errno.h>
 
@@ -96,7 +97,7 @@ void QQnxRasterBackingStore::beginPaint(const QRegion &region)
 
     platformWindow()->adjustBufferSize();
 
-    if (window()->requestedFormat().alphaBufferSize() > 0) {
+    if (backingStore()->paintDevice() == paintDevice() && window()->requestedFormat().alphaBufferSize() > 0) {
         auto platformScreen = static_cast<QQnxScreen *>(platformWindow()->screen());
         for (const QRect &r : region) {
             // Clear transparent regions
diff --git a/src/plugins/platforms/wasm/qwasmbackingstore.cpp b/src/plugins/platforms/wasm/qwasmbackingstore.cpp
index f6d219dbde..80aa1319b4 100644
--- a/src/plugins/platforms/wasm/qwasmbackingstore.cpp
+++ b/src/plugins/platforms/wasm/qwasmbackingstore.cpp
@@ -121,7 +121,7 @@ void QWasmBackingStore::beginPaint(const QRegion &region)
 
     QPainter painter(&m_image);
 
-    if (m_image.hasAlphaChannel()) {
+    if (backingStore()->paintDevice() == paintDevice() && m_image.hasAlphaChannel()) {
         painter.setCompositionMode(QPainter::CompositionMode_Source);
         const QColor blank = Qt::transparent;
         for (const QRect &rect : region)
diff --git a/src/plugins/platforms/windows/qwindowsbackingstore.cpp b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
index 0f9d0172d9..ad71a6862b 100644
--- a/src/plugins/platforms/windows/qwindowsbackingstore.cpp
+++ b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
@@ -6,6 +6,7 @@
 #include "qwindowscontext.h"
 
 #include <QtGui/qwindow.h>
+#include <QtGui/qbackingstore.h>
 #include <QtGui/qpainter.h>
 #include <QtGui/private/qwindowsnativeimage_p.h>
 #include <private/qhighdpiscaling_p.h>
@@ -157,7 +158,7 @@ void QWindowsBackingStore::beginPaint(const QRegion &region)
     if (QWindowsContext::verbose > 1)
         qCDebug(lcQpaBackingStore) <<__FUNCTION__ << region;
 
-    if (m_alphaNeedsFill) {
+    if (backingStore()->paintDevice() == paintDevice() && m_alphaNeedsFill) {
         QPainter p(&m_image->image());
         p.setCompositionMode(QPainter::CompositionMode_Source);
         const QColor blank = Qt::transparent;
diff --git a/src/plugins/platforms/xcb/qxcbbackingstore.cpp b/src/plugins/platforms/xcb/qxcbbackingstore.cpp
index 0659cf9fc4..95b8213bc0 100644
--- a/src/plugins/platforms/xcb/qxcbbackingstore.cpp
+++ b/src/plugins/platforms/xcb/qxcbbackingstore.cpp
@@ -21,6 +21,7 @@
 #include <unistd.h>
 
 #include <qdebug.h>
+#include <qbackingstore.h>
 #include <qpainter.h>
 #include <qscreen.h>
 #include <QtGui/private/qhighdpiscaling_p.h>
@@ -768,7 +769,7 @@ void QXcbBackingStore::beginPaint(const QRegion &region)
     m_paintRegions.push(region);
     m_image->preparePaint(region);
 
-    if (m_image->hasAlpha()) {
+    if (backingStore()->paintDevice() == paintDevice() && m_image->hasAlpha()) {
         QPainter p(paintDevice());
         p.setCompositionMode(QPainter::CompositionMode_Source);
         const QColor blank = Qt::transparent;

From 05de6fea8c22f17c0f29f0ed6bcfcccfa605fca7 Mon Sep 17 00:00:00 2001
From: Friedemann Kleint <Friedemann.Kleint@qt.io>
Date: Thu, 7 Jan 2021 15:16:31 +0100
Subject: [PATCH] Windows QPA: Fix missing QScreen change updates

Remove the logic compressing WM_DISPLAYCHANGE signals by the
WParam/LParam since it also triggers when the geometry is changed
by rearranging screens.

Fixes: QTBUG-79442
Change-Id: I00042c9e687bdb67fc17d6c507818b79a7aee0a2
Reviewed-by: Oliver Wolff <oliver.wolff@qt.io>
---
 .../platforms/windows/qwindowscontext.cpp     |  3 ++-
 .../platforms/windows/qwindowsscreen.cpp      | 24 -------------------
 .../platforms/windows/qwindowsscreen.h        |  4 ----
 3 files changed, 2 insertions(+), 29 deletions(-)

diff --git a/src/plugins/platforms/windows/qwindowscontext.cpp b/src/plugins/platforms/windows/qwindowscontext.cpp
index fa757b0edc..4f0a922b21 100644
--- a/src/plugins/platforms/windows/qwindowscontext.cpp
+++ b/src/plugins/platforms/windows/qwindowscontext.cpp
@@ -1218,7 +1218,8 @@ bool QWindowsContext::windowsProc(HWND hwnd, UINT message,
         if (QWindowsTheme *t = QWindowsTheme::instance())
             t->displayChanged();
         QWindowsWindow::displayChanged();
-        return d->m_screenManager.handleDisplayChange(wParam, lParam);
+        d->m_screenManager.handleScreenChanges();
+        return false;
     case QtWindows::SettingChangedEvent: {
         QWindowsWindow::settingsChanged();
         const bool darkMode = QWindowsTheme::queryDarkMode();
diff --git a/src/plugins/platforms/windows/qwindowsscreen.cpp b/src/plugins/platforms/windows/qwindowsscreen.cpp
index 4697d1f249..0602cb3489 100644
--- a/src/plugins/platforms/windows/qwindowsscreen.cpp
+++ b/src/plugins/platforms/windows/qwindowsscreen.cpp
@@ -445,30 +445,6 @@ bool QWindowsScreenManager::isSingleScreen()
     return QWindowsContext::instance()->screenManager().screens().size() < 2;
 }
 
-/*!
-    \brief Triggers synchronization of screens (WM_DISPLAYCHANGE).
-
-    Subsequent events are compressed since WM_DISPLAYCHANGE is sent to
-    each top level window.
-*/
-
-bool QWindowsScreenManager::handleDisplayChange(WPARAM wParam, LPARAM lParam)
-{
-    const int newDepth = int(wParam);
-    const WORD newHorizontalResolution = LOWORD(lParam);
-    const WORD newVerticalResolution = HIWORD(lParam);
-    if (newDepth != m_lastDepth || newHorizontalResolution != m_lastHorizontalResolution
-        || newVerticalResolution != m_lastVerticalResolution) {
-        m_lastDepth = newDepth;
-        m_lastHorizontalResolution = newHorizontalResolution;
-        m_lastVerticalResolution = newVerticalResolution;
-        qCDebug(lcQpaWindows) << __FUNCTION__ << "Depth=" << newDepth
-            << ", resolution " << newHorizontalResolution << 'x' << newVerticalResolution;
-        handleScreenChanges();
-    }
-    return false;
-}
-
 static inline int indexOfMonitor(const QWindowsScreenManager::WindowsScreenList &screens,
                                  const QString &monitorName)
 {
diff --git a/src/plugins/platforms/windows/qwindowsscreen.h b/src/plugins/platforms/windows/qwindowsscreen.h
index 5c095808f2..7c5a68d740 100644
--- a/src/plugins/platforms/windows/qwindowsscreen.h
+++ b/src/plugins/platforms/windows/qwindowsscreen.h
@@ -134,7 +134,6 @@ public:
     void clearScreens();
 
     bool handleScreenChanges();
-    bool handleDisplayChange(WPARAM wParam, LPARAM lParam);
     const WindowsScreenList &screens() const { return m_screens; }
 
     const QWindowsScreen *screenAtDp(const QPoint &p) const;
@@ -146,9 +145,6 @@ private:
     void removeScreen(int index);
 
     WindowsScreenList m_screens;
-    int m_lastDepth = -1;
-    WORD m_lastHorizontalResolution = 0;
-    WORD m_lastVerticalResolution = 0;
 };
 
 QT_END_NAMESPACE
-- 
2.30.1


diff --git a/src/client/qwaylandscreen.cpp b/src/client/qwaylandscreen.cpp
index ef548925..a9d5c2f4 100644
--- a/src/client/qwaylandscreen.cpp
+++ b/src/client/qwaylandscreen.cpp
@@ -189,7 +189,9 @@ int QWaylandScreen::scale() const
 
 qreal QWaylandScreen::devicePixelRatio() const
 {
-    return qreal(mScale);
+    return (mWaylandDisplay->fractionalScaleManager() && std::fmod(mFractionalScale, qreal(1)) != 0)
+        ? mFractionalScale
+        : qreal(mScale);
 }
 
 qreal QWaylandScreen::refreshRate() const
@@ -374,7 +376,12 @@ void QWaylandScreen::zxdg_output_v1_name(const QString &name)
 void QWaylandScreen::updateXdgOutputProperties()
 {
     Q_ASSERT(zxdg_output_v1::isInitialized());
+    mFractionalScale = std::round((qreal(mGeometry.width()) / qreal(mXdgGeometry.width())
+        + qreal(mGeometry.height()) / qreal(mXdgGeometry.height()))
+        * qreal(0.5) * qreal(100)) / qreal(100);
+    const QDpi dpi = logicalDpi();
     QWindowSystemInterface::handleScreenGeometryChange(screen(), geometry(), geometry());
+    QWindowSystemInterface::handleScreenLogicalDotsPerInchChange(screen(), dpi.first, dpi.second);
 }
 
 } // namespace QtWaylandClient
diff --git a/src/client/qwaylandscreen_p.h b/src/client/qwaylandscreen_p.h
index ff3d2321..15ee29cf 100644
--- a/src/client/qwaylandscreen_p.h
+++ b/src/client/qwaylandscreen_p.h
@@ -121,6 +121,7 @@ protected:
     QRect mGeometry;
     QRect mXdgGeometry;
     int mScale = 1;
+    qreal mFractionalScale = 1;
     int mDepth = 32;
     int mRefreshRate = 60000;
     int mSubpixel = -1;
diff --git a/src/client/qwaylandwindow.cpp b/src/client/qwaylandwindow.cpp
index 12838033..a951e0ff 100644
--- a/src/client/qwaylandwindow.cpp
+++ b/src/client/qwaylandwindow.cpp
@@ -106,7 +106,7 @@ void QWaylandWindow::initWindow()
         initializeWlSurface();
     }
 
-    if (mDisplay->fractionalScaleManager() && qApp->highDpiScaleFactorRoundingPolicy() == Qt::HighDpiScaleFactorRoundingPolicy::PassThrough) {
+    if (mDisplay->fractionalScaleManager()) {
         mFractionalScale.reset(new QWaylandFractionalScale(mDisplay->fractionalScaleManager()->get_fractional_scale(mSurface->object())));
 
         connect(mFractionalScale.data(), &QWaylandFractionalScale::preferredScaleChanged,

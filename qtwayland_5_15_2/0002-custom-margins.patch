diff --git a/src/client/qwaylandwindow.cpp b/src/client/qwaylandwindow.cpp
index d22fcd54..f602ebfb 100644
--- a/src/client/qwaylandwindow.cpp
+++ b/src/client/qwaylandwindow.cpp
@@ -372,10 +372,9 @@ void QWaylandWindow::setGeometry(const QRect &rect)
 
 void QWaylandWindow::resizeFromApplyConfigure(const QSize &sizeWithMargins, const QPoint &offset)
 {
-    QMargins margins = frameMargins();
-    int widthWithoutMargins = qMax(sizeWithMargins.width() - (margins.left() + margins.right()), 1);
-    int heightWithoutMargins = qMax(sizeWithMargins.height() - (margins.top() + margins.bottom()), 1);
-    QRect geometry(windowGeometry().topLeft(), QSize(widthWithoutMargins, heightWithoutMargins));
+    QSize sizeWithoutMargins = sizeWithMargins.shrunkBy(frameMargins()).grownBy(customMargins());
+    QSize vailidatedSize = QSize(qMax(sizeWithoutMargins.width(), 1), qMax(sizeWithoutMargins.height(), 1));
+    QRect geometry(windowGeometry().topLeft(), vailidatedSize);
 
     mOffset += offset;
     mInResizeFromApplyConfigure = true;
@@ -668,6 +667,14 @@ QMargins QWaylandWindow::frameMargins() const
     return QPlatformWindow::frameMargins();
 }
 
+QMargins QWaylandWindow::customMargins() const
+{
+    QVariant propertyValue = window()->property("WaylandCustomMargins");
+    return propertyValue.isValid()
+        ? qvariant_cast<QMargins>(propertyValue)
+        : QMargins();
+}
+
 /*!
  * Size, with decorations (including including eventual shadows) in wl_surface coordinates
  */
@@ -682,7 +689,7 @@ QSize QWaylandWindow::surfaceSize() const
  */
 QRect QWaylandWindow::windowContentGeometry() const
 {
-    return QRect(QPoint(), surfaceSize());
+    return QRect(QPoint(), surfaceSize()).marginsRemoved(customMargins());
 }
 
 /*!
diff --git a/src/client/qwaylandwindow_p.h b/src/client/qwaylandwindow_p.h
index 6cc1664b..af0dd4c2 100644
--- a/src/client/qwaylandwindow_p.h
+++ b/src/client/qwaylandwindow_p.h
@@ -129,6 +129,7 @@ public:
     bool waitForFrameSync(int timeout);
 
     QMargins frameMargins() const override;
+    QMargins customMargins() const;
     QSize surfaceSize() const;
     QRect windowContentGeometry() const;
     QPointF mapFromWlSurface(const QPointF &surfacePosition) const;
@@ -306,4 +307,6 @@ inline QPoint QWaylandWindow::attachOffset() const
 
 QT_END_NAMESPACE
 
+Q_DECLARE_METATYPE(QMargins)
+
 #endif // QWAYLANDWINDOW_H
diff --git a/src/plugins/shellintegration/wl-shell/qwaylandwlshellsurface.cpp b/src/plugins/shellintegration/wl-shell/qwaylandwlshellsurface.cpp
index 8f41118d..af02db4d 100644
--- a/src/plugins/shellintegration/wl-shell/qwaylandwlshellsurface.cpp
+++ b/src/plugins/shellintegration/wl-shell/qwaylandwlshellsurface.cpp
@@ -134,7 +134,7 @@ void QWaylandWlShellSurface::applyConfigure()
 {
     if ((m_pending.states & (Qt::WindowMaximized|Qt::WindowFullScreen))
             && !(m_applied.states & (Qt::WindowMaximized|Qt::WindowFullScreen))) {
-        m_normalSize = m_window->windowFrameGeometry().size();
+        m_normalSize = m_window->windowContentGeometry().size();
     }
 
     if (m_pending.states != m_applied.states)
diff --git a/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp b/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp
index 1c762944..882079c7 100644
--- a/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp
+++ b/src/plugins/shellintegration/xdg-shell/qwaylandxdgshell.cpp
@@ -83,7 +83,7 @@ QWaylandXdgSurface::Toplevel::~Toplevel()
 void QWaylandXdgSurface::Toplevel::applyConfigure()
 {
     if (!(m_applied.states & (Qt::WindowMaximized|Qt::WindowFullScreen)))
-        m_normalSize = m_xdgSurface->m_window->windowFrameGeometry().size();
+        m_normalSize = m_xdgSurface->m_window->windowContentGeometry().size();
 
     if ((m_pending.states & Qt::WindowActive) && !(m_applied.states & Qt::WindowActive))
         m_xdgSurface->m_window->display()->handleWindowActivated(m_xdgSurface->m_window);

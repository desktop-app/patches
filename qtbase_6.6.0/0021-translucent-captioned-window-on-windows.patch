diff --git a/src/plugins/platforms/windows/qwindowsbackingstore.cpp b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
index 0f9d0172d9..e03660599d 100644
--- a/src/plugins/platforms/windows/qwindowsbackingstore.cpp
+++ b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
@@ -52,11 +52,17 @@ void QWindowsBackingStore::flush(QWindow *window, const QRegion &region,
 
     const bool hasAlpha = rw->format().hasAlpha();
     const Qt::WindowFlags flags = window->flags();
-    if ((flags & Qt::FramelessWindowHint) && QWindowsWindow::setWindowLayered(rw->handle(), flags, hasAlpha, rw->opacity()) && hasAlpha) {
+    const auto useBlending = hasAlpha;
+    if (useBlending && QWindowsWindow::setWindowLayered(rw->handle(), flags, hasAlpha, rw->opacity()) && hasAlpha) {
         // Windows with alpha: Use blend function to update.
         QRect r = QHighDpi::toNativePixels(window->frameGeometry(), window);
-        QMargins frameMargins = rw->frameMargins();
-        QRect dirtyRect = br.translated(offset + QPoint(frameMargins.left(), frameMargins.top()));
+        QMargins frameMargins = QHighDpi::toNativePixels(window->frameMargins(), window);
+        if (!(flags & Qt::FramelessWindowHint)) {
+            r = r.marginsRemoved(frameMargins);
+        }
+        QRect dirtyRect = (flags & Qt::FramelessWindowHint)
+            ? br.translated(offset + QPoint(frameMargins.left(), frameMargins.top()))
+            : br.translated(offset);
 
         SIZE size = {r.width(), r.height()};
         POINT ptDst = {r.x(), r.y()};
diff --git a/src/plugins/platforms/windows/qwindowswindow.cpp b/src/plugins/platforms/windows/qwindowswindow.cpp
index 63c271a79c..f09def4206 100644
--- a/src/plugins/platforms/windows/qwindowswindow.cpp
+++ b/src/plugins/platforms/windows/qwindowswindow.cpp
@@ -470,8 +470,9 @@ static bool shouldShowMaximizeButton(const QWindow *w, Qt::WindowFlags flags)
 
 bool QWindowsWindow::hasNoNativeFrame(HWND hwnd, Qt::WindowFlags flags)
 {
-    const LONG_PTR style = GetWindowLongPtr(hwnd, GWL_STYLE);
-    return (style & WS_CHILD) || (flags & Qt::FramelessWindowHint);
+    Q_UNUSED(hwnd);
+    Q_UNUSED(flags);
+    return true;
 }
 
 // Set the WS_EX_LAYERED flag on a HWND if required. This is required for

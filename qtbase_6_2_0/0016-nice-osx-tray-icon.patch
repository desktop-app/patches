diff --git a/src/plugins/platforms/cocoa/qcocoasystemtrayicon.h b/src/plugins/platforms/cocoa/qcocoasystemtrayicon.h
index ddc76f6b72..fe72340e20 100644
--- a/src/plugins/platforms/cocoa/qcocoasystemtrayicon.h
+++ b/src/plugins/platforms/cocoa/qcocoasystemtrayicon.h
@@ -82,11 +82,14 @@ public:
     bool supportsMessages() const override;
 
     void statusItemClicked();
+    void updateItemIcon();
 
 private:
     NSStatusItem *m_statusItem = nullptr;
     QStatusItemDelegate *m_delegate = nullptr;
     QCocoaMenu *m_menu = nullptr;
+    QIcon m_icon;
+    bool m_handledOnPress = false;
 };
 
 QT_END_NAMESPACE
diff --git a/src/plugins/platforms/cocoa/qcocoasystemtrayicon.mm b/src/plugins/platforms/cocoa/qcocoasystemtrayicon.mm
index 962d1e34b3..e6b1344b60 100644
--- a/src/plugins/platforms/cocoa/qcocoasystemtrayicon.mm
+++ b/src/plugins/platforms/cocoa/qcocoasystemtrayicon.mm
@@ -111,6 +111,8 @@ void QCocoaSystemTrayIcon::cleanup()
     if (center.delegate == m_delegate)
         center.delegate = nil;
 
+    [m_statusItem removeObserver:m_delegate forKeyPath:@"button.effectiveAppearance"];
+
     [NSStatusBar.systemStatusBar removeStatusItem:m_statusItem];
     [m_statusItem release];
     m_statusItem = nil;
@@ -143,15 +145,26 @@ static QList<QSize> sortByHeight(const QList<QSize> &sizes)
 }
 
 void QCocoaSystemTrayIcon::updateIcon(const QIcon &icon)
+{
+    m_icon = icon;
+    updateItemIcon();
+}
+
+void QCocoaSystemTrayIcon::updateItemIcon()
 {
     if (!m_statusItem)
         return;
 
+    NSAppearance *appearance = m_statusItem.button.effectiveAppearance;
+    NSString *appearanceName = (NSString*)(appearance.name);
+    const auto darkMode = [[appearanceName lowercaseString] containsString:@"dark"];
+    const auto state = darkMode ? QIcon::On : QIcon::Off;
+
     // The recommended maximum title bar icon height is 18 points
     // (device independent pixels). The menu height on past and
     // current OS X versions is 22 points. Provide some future-proofing
     // by deriving the icon height from the menu height.
-    const int padding = 4;
+    const int padding = 0;
     const int menuHeight = NSStatusBar.systemStatusBar.thickness;
     const int maxImageHeight = menuHeight - padding;
 
@@ -161,54 +174,60 @@ void QCocoaSystemTrayIcon::updateIcon(const QIcon &icon)
     // devicePixelRatio for the "best" screen on the system.
     qreal devicePixelRatio = qApp->devicePixelRatio();
     const int maxPixmapHeight = maxImageHeight * devicePixelRatio;
-    QSize selectedSize;
-    for (const QSize& size : sortByHeight(icon.availableSizes())) {
-        // Select a pixmap based on the height. We want the largest pixmap
-        // with a height smaller or equal to maxPixmapHeight. The pixmap
-        // may rectangular; assume it has a reasonable size. If there is
-        // not suitable pixmap use the smallest one the icon can provide.
-        if (size.height() <= maxPixmapHeight) {
-            selectedSize = size;
-        } else {
-            if (!selectedSize.isValid())
+
+    const auto imageByMode = [&](QIcon::Mode mode) {
+        QSize selectedSize;
+        for (const QSize& size : sortByHeight(m_icon.availableSizes(mode, state))) {
+            // Select a pixmap based on the height. We want the largest pixmap
+            // with a height smaller or equal to maxPixmapHeight. The pixmap
+            // may rectangular; assume it has a reasonable size. If there is
+            // not suitable pixmap use the smallest one the icon can provide.
+            if (size.height() <= maxPixmapHeight) {
                 selectedSize = size;
-            break;
+            } else {
+                if (!selectedSize.isValid())
+                    selectedSize = size;
+                break;
+            }
         }
-    }
 
-    // Handle SVG icons, which do not return anything for availableSizes().
-    if (!selectedSize.isValid())
-        selectedSize = icon.actualSize(QSize(maxPixmapHeight, maxPixmapHeight));
-
-    QPixmap pixmap = icon.pixmap(selectedSize);
-
-    // Draw a low-resolution icon if there is not enough pixels for a retina
-    // icon. This prevents showing a small icon on retina displays.
-    if (devicePixelRatio > 1.0 && selectedSize.height() < maxPixmapHeight / 2)
-        devicePixelRatio = 1.0;
-
-    // Scale large pixmaps to fit the available menu bar area.
-    if (pixmap.height() > maxPixmapHeight)
-        pixmap = pixmap.scaledToHeight(maxPixmapHeight, Qt::SmoothTransformation);
-
-    // The icon will be stretched over the full height of the menu bar
-    // therefore we create a second pixmap which has the full height
-    QSize fullHeightSize(!pixmap.isNull() ? pixmap.width():
-                                            menuHeight * devicePixelRatio,
-                         menuHeight * devicePixelRatio);
-    QPixmap fullHeightPixmap(fullHeightSize);
-    fullHeightPixmap.fill(Qt::transparent);
-    if (!pixmap.isNull()) {
-        QPainter p(&fullHeightPixmap);
-        QRect r = pixmap.rect();
-        r.moveCenter(fullHeightPixmap.rect().center());
-        p.drawPixmap(r, pixmap);
-    }
-    fullHeightPixmap.setDevicePixelRatio(devicePixelRatio);
-
-    auto *nsimage = [NSImage imageFromQImage:fullHeightPixmap.toImage()];
-    [nsimage setTemplate:icon.isMask()];
-    m_statusItem.button.image = nsimage;
+        // Handle SVG icons, which do not return anything for availableSizes().
+        if (!selectedSize.isValid())
+            selectedSize = m_icon.actualSize(QSize(maxPixmapHeight, maxPixmapHeight), mode, state);
+
+        QPixmap pixmap = m_icon.pixmap(selectedSize, mode, state);
+
+        // Draw a low-resolution icon if there is not enough pixels for a retina
+        // icon. This prevents showing a small icon on retina displays.
+        if (devicePixelRatio > 1.0 && selectedSize.height() < maxPixmapHeight / 2)
+            devicePixelRatio = 1.0;
+
+        // Scale large pixmaps to fit the available menu bar area.
+        if (pixmap.height() > maxPixmapHeight)
+            pixmap = pixmap.scaledToHeight(maxPixmapHeight, Qt::SmoothTransformation);
+
+        // The icon will be stretched over the full height of the menu bar
+        // therefore we create a second pixmap which has the full height
+        // QSize fullHeightSize(!pixmap.isNull() ? pixmap.width():
+        //                                         menuHeight * devicePixelRatio,
+        //                      menuHeight * devicePixelRatio);
+        // QPixmap fullHeightPixmap(fullHeightSize);
+        // fullHeightPixmap.fill(Qt::transparent);
+        // if (!pixmap.isNull()) {
+        //     QPainter p(&fullHeightPixmap);
+        //     QRect r = pixmap.rect();
+        //     r.moveCenter(fullHeightPixmap.rect().center());
+        //     p.drawPixmap(r, pixmap);
+        // }
+        // fullHeightPixmap.setDevicePixelRatio(devicePixelRatio);
+
+        auto *nsimage = [NSImage imageFromQImage:pixmap.toImage()];
+        [nsimage setTemplate:m_icon.isMask()];
+
+        return nsimage;
+    };
+    m_statusItem.button.image = imageByMode(QIcon::Normal);
+    m_statusItem.button.alternateImage = imageByMode(QIcon::Active);
     m_statusItem.button.imageScaling = NSImageScaleProportionallyDown;
 }
 
@@ -266,6 +285,18 @@ void QCocoaSystemTrayIcon::statusItemClicked()
 {
     auto *mouseEvent = NSApp.currentEvent;
 
+	if (mouseEvent.type == NSEventTypeLeftMouseDown) {
+		m_handledOnPress = !m_menu;
+		if (!m_handledOnPress) {
+			return;
+		}
+		[m_statusItem.button highlight:NO];
+	} else if (mouseEvent.type == NSEventTypeLeftMouseUp) {
+		if (m_handledOnPress) {
+			return;
+		}
+	}
+
     auto activationReason = QPlatformSystemTrayIcon::Unknown;
 
     if (mouseEvent.clickCount == 2) {
@@ -322,6 +353,14 @@ QT_END_NAMESPACE
     emit self.platformSystemTray->messageClicked();
 }
 
+// Thanks https://stackoverflow.com/a/64525038
+-(void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSKeyValueChangeKey,id> *)change context:(void *)context
+{
+    if ([keyPath isEqualToString:@"button.effectiveAppearance"]) {
+        self.platformSystemTray->updateItemIcon();
+    }
+}
+
 @end
 
 #endif // QT_NO_SYSTEMTRAYICON
diff --git a/src/widgets/util/qsystemtrayicon_qpa.cpp b/src/widgets/util/qsystemtrayicon_qpa.cpp
index 9694e0a6b3..401c61bbf9 100644
--- a/src/widgets/util/qsystemtrayicon_qpa.cpp
+++ b/src/widgets/util/qsystemtrayicon_qpa.cpp
@@ -98,6 +98,11 @@ void QSystemTrayIconPrivate::updateMenu_sys()
     if (qpa_sys && menu) {
         addPlatformMenu(menu);
         qpa_sys->updateMenu(menu->platformMenu());
+
+    // Patch: Create a rich os x tray icon (pixel-perfect, theme switching).
+    } else if (qpa_sys) {
+        qpa_sys->updateMenu(nullptr);
+
     }
 #endif
 }

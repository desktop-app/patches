From 9b7f7115439d5fc1604c39bde86f1807c4e28835 Mon Sep 17 00:00:00 2001
From: Richard Moe Gustavsen <richard.gustavsen@qt.io>
Date: Tue, 2 Nov 2021 09:02:45 +0100
Subject: [PATCH] Revert "Code style fix"

This reverts commit e1d7df5ce9eb1d370e1b6dcd31ced4029082d63d.

The offending patch removed handling of page-up and page-down
shortcuts in QScrollView (including subclasses like QTextBrowser).

Fixes: QTBUG-97908
Fixes: QTBUG-90352
Change-Id: If760e983a082edb53e12e1311e2c7f2676d80bb2
Reviewed-by: Volker Hilsheimer <volker.hilsheimer@qt.io>
Reviewed-by: Liang Qi <liang.qi@qt.io>
(cherry picked from commit 8ba3a2f911ad035b0847068bdde1ee87c93cf274)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
---
 src/widgets/widgets/qabstractscrollarea.cpp | 82 +++++++++++----------
 1 file changed, 45 insertions(+), 37 deletions(-)

diff --git a/src/widgets/widgets/qabstractscrollarea.cpp b/src/widgets/widgets/qabstractscrollarea.cpp
index 4ad8a3b4110..627dbaa1d6e 100644
--- a/src/widgets/widgets/qabstractscrollarea.cpp
+++ b/src/widgets/widgets/qabstractscrollarea.cpp
@@ -1232,49 +1232,57 @@ void QAbstractScrollArea::contextMenuEvent(QContextMenuEvent *e)
 void QAbstractScrollArea::keyPressEvent(QKeyEvent * e)
 {
     Q_D(QAbstractScrollArea);
-
+    if (false){
+#ifndef QT_NO_SHORTCUT
+    } else if (e == QKeySequence::MoveToPreviousPage) {
+        d->vbar->triggerAction(QScrollBar::SliderPageStepSub);
+    } else if (e == QKeySequence::MoveToNextPage) {
+        d->vbar->triggerAction(QScrollBar::SliderPageStepAdd);
+#endif
+    } else {
 #ifdef QT_KEYPAD_NAVIGATION
-    if (QApplicationPrivate::keypadNavigationEnabled() && !hasEditFocus()) {
-        e->ignore();
-        return;
-    }
+        if (QApplicationPrivate::keypadNavigationEnabled() && !hasEditFocus()) {
+            e->ignore();
+            return;
+        }
 #endif
-    switch (e->key()) {
-    case Qt::Key_Up:
-        d->vbar->triggerAction(QScrollBar::SliderSingleStepSub);
-        break;
-    case Qt::Key_Down:
-        d->vbar->triggerAction(QScrollBar::SliderSingleStepAdd);
-        break;
-    case Qt::Key_Left:
+        switch (e->key()) {
+        case Qt::Key_Up:
+            d->vbar->triggerAction(QScrollBar::SliderSingleStepSub);
+            break;
+        case Qt::Key_Down:
+            d->vbar->triggerAction(QScrollBar::SliderSingleStepAdd);
+            break;
+        case Qt::Key_Left:
 #ifdef QT_KEYPAD_NAVIGATION
-    if (QApplicationPrivate::keypadNavigationEnabled() && hasEditFocus()
-        && (!d->hbar->isVisible() || d->hbar->value() == d->hbar->minimum())) {
-        //if we aren't using the hbar or we are already at the leftmost point ignore
-        e->ignore();
-        return;
-    }
+        if (QApplicationPrivate::keypadNavigationEnabled() && hasEditFocus()
+            && (!d->hbar->isVisible() || d->hbar->value() == d->hbar->minimum())) {
+            //if we aren't using the hbar or we are already at the leftmost point ignore
+            e->ignore();
+            return;
+        }
 #endif
-        d->hbar->triggerAction(
-            layoutDirection() == Qt::LeftToRight
-            ? QScrollBar::SliderSingleStepSub : QScrollBar::SliderSingleStepAdd);
-        break;
-    case Qt::Key_Right:
+            d->hbar->triggerAction(
+                layoutDirection() == Qt::LeftToRight
+                ? QScrollBar::SliderSingleStepSub : QScrollBar::SliderSingleStepAdd);
+            break;
+        case Qt::Key_Right:
 #ifdef QT_KEYPAD_NAVIGATION
-    if (QApplicationPrivate::keypadNavigationEnabled() && hasEditFocus()
-        && (!d->hbar->isVisible() || d->hbar->value() == d->hbar->maximum())) {
-        //if we aren't using the hbar or we are already at the rightmost point ignore
-        e->ignore();
-        return;
-    }
+        if (QApplicationPrivate::keypadNavigationEnabled() && hasEditFocus()
+            && (!d->hbar->isVisible() || d->hbar->value() == d->hbar->maximum())) {
+            //if we aren't using the hbar or we are already at the rightmost point ignore
+            e->ignore();
+            return;
+        }
 #endif
-        d->hbar->triggerAction(
-            layoutDirection() == Qt::LeftToRight
-            ? QScrollBar::SliderSingleStepAdd : QScrollBar::SliderSingleStepSub);
-        break;
-    default:
-        e->ignore();
-        return;
+            d->hbar->triggerAction(
+                layoutDirection() == Qt::LeftToRight
+                ? QScrollBar::SliderSingleStepAdd : QScrollBar::SliderSingleStepSub);
+            break;
+        default:
+            e->ignore();
+            return;
+        }
     }
     e->accept();
 }

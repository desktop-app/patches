diff --git a/src/plugins/platforms/xcb/qxcbscreen.cpp b/src/plugins/platforms/xcb/qxcbscreen.cpp
index e637ed827c..2d0dfe603b 100644
--- a/src/plugins/platforms/xcb/qxcbscreen.cpp
+++ b/src/plugins/platforms/xcb/qxcbscreen.cpp
@@ -114,17 +114,13 @@ QXcbVirtualDesktop::QXcbVirtualDesktop(QXcbConnection *connection, xcb_screen_t
     }
 
     auto dpiChangedCallback = [](QXcbVirtualDesktop *desktop, const QByteArray &, const QVariant &property, void *) {
-        bool ok;
-        int dpiTimes1k = property.toInt(&ok);
-        if (!ok)
+        if (!desktop->setDpiFromXSettings(property))
             return;
-        int dpi = dpiTimes1k / 1024;
-        if (desktop->m_forcedDpi == dpi)
-            return;
-        desktop->m_forcedDpi = dpi;
+        const auto dpi = desktop->forcedDpi();
         for (QXcbScreen *screen : desktop->connection()->screens())
             QWindowSystemInterface::handleScreenLogicalDotsPerInchChange(screen->QPlatformScreen::screen(), dpi, dpi);
     };
+    setDpiFromXSettings(xSettings()->setting("Xft/DPI"));
     xSettings()->registerCallbackForProperty("Xft/DPI", dpiChangedCallback, nullptr);
 }
 
@@ -420,6 +416,19 @@ void QXcbVirtualDesktop::readXResources()
     }
 }
 
+bool QXcbVirtualDesktop::setDpiFromXSettings(const QVariant &property)
+{
+    bool ok;
+    int dpiTimes1k = property.toInt(&ok);
+    if (!ok)
+        return false;
+    int dpi = dpiTimes1k / 1024;
+    if (m_forcedDpi == dpi)
+        return false;
+    m_forcedDpi = dpi;
+    return true;
+}
+
 QSurfaceFormat QXcbVirtualDesktop::surfaceFormatFor(const QSurfaceFormat &format) const
 {
     const xcb_visualid_t xcb_visualid = connection()->hasDefaultVisualId() ? connection()->defaultVisualId()
diff --git a/src/plugins/platforms/xcb/qxcbscreen.h b/src/plugins/platforms/xcb/qxcbscreen.h
index ad2980b55e..8c7bf8c4a0 100644
--- a/src/plugins/platforms/xcb/qxcbscreen.h
+++ b/src/plugins/platforms/xcb/qxcbscreen.h
@@ -118,6 +118,8 @@ private:
                           QByteArray &stringValue);
     void readXResources();
 
+    bool setDpiFromXSettings(const QVariant &property);
+
     xcb_screen_t *m_screen;
     const int m_number;
     QList<QPlatformScreen *> m_screens;
